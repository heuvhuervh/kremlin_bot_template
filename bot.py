import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import CommandStart
from fastapi import FastAPI
import uvicorn

# üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ–º–æ–≥–∞–µ—Ç –≤ Render –≤–∏–¥–µ—Ç—å —Ä–∞–±–æ—Ç—É)
logging.basicConfig(level=logging.INFO)

# üîπ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

# üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start_cmd(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ Render üõ†Ô∏è")

# üîπ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ polling
async def start_bot():
    logging.info("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è polling –±–æ—Ç–∞...")
    await dp.start_polling(bot)

# üîπ FastAPI-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è Render (–æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞)
app = FastAPI()

@app.get("/")
def read_root():
    return {"status": "ok", "message": "Telegram Bot is running on Render"}

# üîπ –ó–∞–ø—É—Å–∫ –∏ –±–æ—Ç–∞, –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(start_bot())  # –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    uvicorn.run(app, host="0.0.0.0", port=int(os.environ.get("PORT", 8000)))  # –ø–æ—Ä—Ç –¥–ª—è Render
